---
interface ProjectItemProps {
  title: string;
  tecnologies: { name: string; icon: string }[];
  description: string;
  imgPath: string;
  status: string;
}

const { title, tecnologies, description, imgPath, status } = Astro.props as ProjectItemProps;
---

<div>
  <figure class="w-full rounded-3xl overflow-hidden">
    <img class="w-full h-full min-h-[232px] object-cover group-hover:scale-105 group-hover:brightness-110 transition-all duration-300" 
      src={imgPath} 
      alt={title} loading="lazy">
  </figure>

  <div class="p-6">
    <h1 class="font-bold text-lg text-primary-700 dark:text-primary-400">
      {title}
    </h1>
    <p class="line-clamp-3 mt-4 text-dark-700 dark:text-dark-200">
      {description}
    </p>
    <div class="w-full justify-between ">
      <span class="mt-4 inline-block px-2 py-1 rounded-full text-sm">
        <ul class="flex flex-row gap-2 justify-evenly ">
          {tecnologies.map(tecnology => (
            <li>
              <span class="flex gap-x-2 rounded-full text-xs bg-gray-800 text-[#101426] py-2 px-3 font-bold">
                <img src={tecnology.icon} alt={tecnology.name} style="width: 20px; height: 20px;" />
              </span>
            </li>
          ))}
        </ul>
      </span>
    </div>
  </div>
  <span class="absolute top-4 left-4 py-1 px-2 bg-slate-500 rounded-full z-10 text-sm font-semibold text-dark-100 ">
    FullStack
  </span>
  <span class={`absolute top-48 left-4 inline-block px-2 py-1 rounded-full text-sm ${status === 'Finalizado' ? 'bg-green-200 text-green-800' : 'bg-orange-200 text-orange-800'}`}>
    {status}
  </span>
</div>
